import { useCallback, useEffect, useMemo, useRef, useState } from "react";

type User = {
  id: number;
  username: string;
};

type fibFunc = (n: number) => number;

const fib: fibFunc = (n) => {
  if (n < 2) return n;
  return fib(n - 1) + fib(n - 2);
};

const myNum: number = 10;

export default function Home() {
  const [count, setCount] = useState<number>(0);
  const [users, setUsers] = useState<User[] | null>(null);

  const inputRef = useRef<HTMLInputElement>(null);

  console.log(inputRef?.current);
  console.log(inputRef?.current?.value);

  useEffect(() => {
    console.log("Mounting");
    console.log("users: " + users);

    return () => {
      console.log("ummounting");
    };
  }, [users]);

  const addTwo = useCallback(() => setCount((prev) => prev + 1), []);

  const result = useMemo<number>(() => fib(myNum), [myNum]);

  return (
    <div className="w-96 h-96 bg-zinc-800 text-lg m-10 p-10 mx-auto rounded-lg">
      <h1>{count}</h1>
      <button className="bg-blue-600 px-2 rounded-xl m-2" onClick={addTwo}>
        Add
      </button>
      <h2>{result}</h2>
      <input ref={inputRef} type="text" />
    </div>
  );
}
